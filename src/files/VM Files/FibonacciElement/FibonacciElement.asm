@255
D=A
@SP
M=D
@Sys.init
0;JMP
(RETURNER)
@5
D=A
@LCL
A=M-D
D=M
@R13
M=D
@SP
A=M
D=M
@ARG
A=M
M=D
D=A
@SP
M=D
@LCL
D=M
@R14
AM=D-1
D=M
@THAT
M=D
@R14
AM=M-1
D=M
@THIS
M=D
@R14
AM=M-1
D=M
@ARG
M=D
@R14
AM=M-1
D=M
@LCL
M=D
@R13
A=M
0;JMP
(STACKER)
@SP
AM=M+1
M=D
@LCL
D=M
@SP
AM=M+1
M=D
@ARG
D=M
@SP
AM=M+1
M=D
@THIS
D=M
@SP
AM=M+1
M=D
@THAT
D=M
@SP
AM=M+1
M=D
@4
D=A
@R13
D=D+M
@SP
D=M-D
@ARG
M=D
@SP
D=M+1
@LCL
M=D
@R14
A=M
0;JMP
(Main.fibonacci)
@0
D=A
@ARG
A=M+D
D=M
@SP
AM=M+1
M=D
@2
D=A
@SP
AM=M+1
M=D
@SP
A=M
D=-M
@SP
AM=M-1
D=D+M
@Main.fibonacci_if_true0
D;JLT
@SP
A=M
M=0
@continue_Main.fibonacci0
0;JMP
(Main.fibonacci_if_true0)
@SP
A=M
M=-1
(continue_Main.fibonacci0)
@SP
M=M-1
A=M+1
D=M
@Main.fibonacci$IF_TRUE
D;JNE
@Main.fibonacci$IF_FALSE
0;JMP
(Main.fibonacci$IF_TRUE)
@0
D=A
@ARG
A=M+D
D=M
@SP
AM=M+1
M=D
@RETURNER
0;JMP
(Main.fibonacci$IF_FALSE)
@0
D=A
@ARG
A=M+D
D=M
@SP
AM=M+1
M=D
@2
D=A
@SP
AM=M+1
M=D
@SP
A=M
D=-M
@SP
AM=M-1
M=D+M
@1
D=A
@R13
M=D
@Main.fibonacci
D=A
@R14
M=D
@RETURN_ADDRESS_0
D=A
@STACKER
0;JMP
(RETURN_ADDRESS_0)
@0
D=A
@ARG
A=M+D
D=M
@SP
AM=M+1
M=D
@1
D=A
@SP
AM=M+1
M=D
@SP
A=M
D=-M
@SP
AM=M-1
M=D+M
@1
D=A
@R13
M=D
@Main.fibonacci
D=A
@R14
M=D
@RETURN_ADDRESS_1
D=A
@STACKER
0;JMP
(RETURN_ADDRESS_1)
@SP
A=M
D=M
@SP
AM=M-1
M=D+M
@RETURNER
0;JMP
(Sys.init)
@5
D=A
@SP
AM=M+1
M=D
@1
D=A
@R13
M=D
@Main.fibonacci
D=A
@R14
M=D
@RETURN_ADDRESS_2
D=A
@STACKER
0;JMP
(RETURN_ADDRESS_2)
@5
D=A
@0
D=D+A
@R13
M=D
@SP
M=M-1
A=M+1
D=M
@R13
A=M
M=D
(Sys.init$WHILE)
@Sys.init$WHILE
0;JMP
